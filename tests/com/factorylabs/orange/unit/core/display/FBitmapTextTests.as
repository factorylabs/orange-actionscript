package com.factorylabs.orange.unit.core.display{	import asunit.asserts.assertEquals;	import asunit.asserts.assertFalse;	import asunit.asserts.assertNotNull;	import asunit.asserts.assertTrue;	import com.factorylabs.orange.core.display.FBitmapText;	import flash.display.Sprite;	/**	 * Generate the test cases for the FBitmapText class. 	 * 	 * <hr /> 	 * <p>Copyright 2004-2010 by <a href="http://www.factorylabs.com/">Factory Design Labs</a></p> 	 * 	 * Permission is hereby granted, free of charge, to any person obtaining 	 * a copy of this software and associated documentation files (the	 * "Software"), to deal in the Software without restriction, including	 * without limitation the rights to use, copy, modify, merge, publish,	 * distribute, sublicense, and/or sell copies of the Software, and to	 * permit persons to whom the Software is furnished to do so, subject to	 * the following conditions:<br /><br />	 *	 * The above copyright notice and this permission notice shall be	 * included in all copies or substantial portions of the Software.<br /><br />	 *	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE	 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION	 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION	 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 	 *	 * @author		Matthew Kitt	 * @version		1.0.0 :: Nov 29, 2009	 */	public class FBitmapTextTests 	{		private var _sprite		:Sprite;		private var _fbitmaptxt	:FBitmapText;				[Before(ui)]		public function runBeforeEachTest() :void		{			_sprite = new Sprite();			_fbitmaptxt = new FBitmapText( _sprite, { x: 10, y: 10, multiline: true, text: 'Test!' } );		}				[After(ui)]		public function runAfterEachTest() :void		{			_sprite.removeChild( _fbitmaptxt );			_fbitmaptxt = null;			_sprite = null;		}				[Test]		public function constructor() :void		{			var fNotOnStage :FBitmapText = new FBitmapText( );			assertEquals( _sprite.numChildren, 1 );			assertTrue( _sprite.contains( _fbitmaptxt ) );			assertFalse( _sprite.contains( fNotOnStage ) );			assertFalse( _fbitmaptxt.tabEnabled );		}				[Test]		public function fBitmap() :void		{			assertNotNull( _fbitmaptxt.fBitmap );		}	}}