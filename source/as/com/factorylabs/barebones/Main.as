package com.factorylabs.barebones{	import com.factorylabs.orange.core.logging.Logger;
	import com.factorylabs.orange.core.IDisposable;	import org.osflash.signals.Signal;	import flash.display.MovieClip;	import flash.display.Stage;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.text.TextField;	/**	 * Generates a basic hello world class.	 *	 * <hr />	 * <p>Copyright 2004-2010 by <a href="http://www.factorylabs.com/">Factory Design Labs</a></p>	 *	 * Permission is hereby granted, free of charge, to any person obtaining	 * a copy of this software and associated documentation files (the	 * "Software"), to deal in the Software without restriction, including	 * without limitation the rights to use, copy, modify, merge, publish,	 * distribute, sublicense, and/or sell copies of the Software, and to	 * permit persons to whom the Software is furnished to do so, subject to	 * the following conditions:<br /><br />	 *	 * The above copyright notice and this permission notice shall be	 * included in all copies or substantial portions of the Software.<br /><br />	 *	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND	 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE	 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION	 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION	 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.	 *	 * @author		Sean Dougherty	 * @version		1.0.0 :: Oct 22, 2009	 */	public class Main		extends MovieClip			implements IDisposable 	{		private var _testtxt	:TextField;		private var _signal 	:Signal;
		private var _logger :Logger;
		public function Main()		{			super();			stop();			if ( parent is Stage )				initialize();			else 				addEventListener( Event.ADDED_TO_STAGE, onStageAdd );		}				override public function toString() :String 		{			return 'com.factorylabs.barebones.Main';		}				public function dispose() :void		{			removeEventListener( Event.REMOVED_FROM_STAGE, onStageRemoval );			removeChild( _testtxt );		}				protected function initialize() :void		{			addEventListener( Event.REMOVED_FROM_STAGE, onStageRemoval );			setStageModes();			startup();		}				protected function setStageModes() :void		{			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;		}				protected function startup() :void		{			trace( '[Main].startup() => starting application' );			testSignal();		}		private function testSignal() :void 		{			_logger = new Logger( 'Test', false );			_logger.signal.add( onLogger );						_signal = new Signal( String );			_signal.add( onPrintMessage );			_signal.dispatch( 'Mansfield' );
		}
		private function onLogger( $str :String = '', $obj :Object = null, $level :String = '', name :String = '' ) :void 		{			trace( '[Main].onLogger() => ' + $str );
		}
		private function onPrintMessage( $str :String ) :void 		{			trace( '[Main].onPrintMessage() => ' + $str );			_logger.trace( 'this is a string' );
		}
		private function onStageAdd( $e :Event ) :void		{			removeEventListener( Event.ADDED_TO_STAGE, onStageAdd );			initialize();		}				private function onStageRemoval( $e :Event ) :void		{			dispose();		}	}}