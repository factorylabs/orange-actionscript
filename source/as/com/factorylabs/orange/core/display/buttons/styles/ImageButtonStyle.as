package com.factorylabs.orange.core.display.buttons.styles{	import com.factorylabs.orange.core.collections.Map;	import com.factorylabs.orange.core.display.buttons.ButtonStateNew;	import com.factorylabs.orange.core.display.buttons.FButtonNew;	import com.factorylabs.orange.core.logger.Log;	import flash.display.DisplayObject;	import flash.events.MouseEvent;	/**	 * Button style which uses images for the four main states.	 * 	 * <p>Copyright 2009 by Factory Design Labs, All Rights Reserved.</p>	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a>	 * 	 * @author		grantdavis	 * @version		1.0.0 :: Oct 7, 2009	 */	public class ImageButtonStyle 		implements IButtonStyle	{/* * PROPERTIES **************************************************************************************************** */		private var _styles : Map;/* * CONSTRUCTOR **************************************************************************************************** */		public function ImageButtonStyle( highlight : DisplayObject, selected : DisplayObject, normal : DisplayObject, disabled : DisplayObject )		{			_styles = new Map( );			_styles.add( ButtonStateNew.HIGHLIGHTED, highlight );			_styles.add( ButtonStateNew.SELECTED, selected );			_styles.add( ButtonStateNew.NORMAL, normal );			_styles.add( ButtonStateNew.DISABLED, disabled );		}		public function toString() : String 		{			return "com.factorylabs.orange.core.display.buttons.FButtonStyleImage";		}/* * PUBLIC ACCESS **************************************************************************************************** */		/**		 * Sets the style for a specific button state.		 *  		 */		public function setStyleForState( style : DisplayObject, state : ButtonStateNew) : void		{			_styles.add( state, style, true );		}		/**		 * Sets the style for a specific mouse event.		 */		public function setStyleForMouseEvent( style : DisplayObject, eventType : String ) : void		{			_styles.add( eventType, style, true );		}		/**		 * @inheritDoc		 */		public function getStyleForState( state : ButtonStateNew, button : FButtonNew ) : DisplayObject		{			return _styles.get( state ) as DisplayObject;		}		/**		 * @inheritDoc		 */		public function getStyleForMouseEvent( event : MouseEvent, button : FButtonNew ) : DisplayObject		{			if ( _styles.hasKey( event.type ))			{				Log.debug( "[FButtonStyleImage] getStyleForMouseEvent() ", "Returning custom style for " + event.type );				return _styles.get( event.type ) as DisplayObject;				}			else			{				Log.debug( "[FButtonStyleImage] getStyleForMouseEvent() ", "Using state style " + button.state + " for event " + event.type );			}			return getStyleForState( button.state, button );			}	}}