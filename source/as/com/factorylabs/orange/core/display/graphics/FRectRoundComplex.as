package com.factorylabs.orange.core.display.graphics {	import flash.display.Graphics;		import com.factorylabs.orange.core.display.graphics.Graphic;	import com.factorylabs.orange.core.display.graphics.fills.IFill;	/**	 * Draws a rounded rectangle shape with an option to apply different values for individual corners. 	 * 	 * <p>Copyright 2008 by Factory Design Labs, All Rights Reserved.</p>	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a>	 *	 * @author		Matthew Kitt	 * @version		1.0.0 :: Jun 3, 2008	 */	public class FRectRoundComplex		extends Graphic 	{/* Properties ......................................................................................*/				protected var _topLeft : Number;		protected var _topRight : Number;		protected var _bottomLeft : Number;		protected var _bottomRight : Number;		/* Getters/Setters .................................................................................*/				/**		 * @return	the top left corner value.		 */		public function get topLeft() : Number		{			return _topLeft;		}				public function set topLeft( vTopLeft: Number ) : void		{			_topLeft = vTopLeft;			if( _autoRedraw ) redraw();		}				/**		 * @return	the top right corner value.		 */		public function get topRight() : Number		{			return _topRight;		}				public function set topRight( vTopRight : Number ) : void		{			_topRight = vTopRight;			if( _autoRedraw ) redraw();		}				/**		 * @return	the bottom left corner value.		 */		public function get bottomLeft() : Number		{			return _bottomLeft;		}				public function set bottomLeft( vBottomLeft : Number ) : void		{			_bottomLeft = vBottomLeft;			if( _autoRedraw ) redraw();		}				/**		 * @return	the bottom right corner value.		 */		public function get bottomRight() : Number		{			return _bottomRight;		}				public function set bottomRight( vBottomRight : Number ) : void		{			_bottomRight = vBottomRight;			if( _autoRedraw ) redraw();		}/* Constructor .....................................................................................*/			/**		 * Constructs and draws a rounded rectangle shape with an option to apply different values for individual corners.		 * @param gfx			Reference to the <code>shape.graphics</code> where the shape will be drawn into.		 * @param xp			A number indicating the horizontal position relative to the registration point of the parent display object.		 * @param yp			A number indicating the vertical position relative to the registration point of the parent display object.		 * @param wv			The width of the shape.		 * @param hv			The height of the shape.		 * @param vFill			Fill or line style to apply the shape.		 * @param tl			The top left corner value.		 * @param tr			The top right corner value. 		 * @param bl			The bottom left corner value.		 * @param br			The bottom right corner value.		 * @param vCenter		Whether to center the shape or not.		 * @param vAutoRedraw	Determines if the graphic should auto redraw when a setter is called.		 *  		 * @example The following code creates a complex rounded rectangle.	 	 * <listing version="3.0" >	 	 * var sf : SolidFill = new SolidFill( 0x666666, .8 );	 	 * var r1 : FRectRoundComplex = new FRectRoundComplex( _gfx.graphics, 0, 0, 200, 100, sf, 10, 10, 0, 0 );	 	 * </listing>		 */		public function FRectRoundComplex( gfx : Graphics, xp : Number = 0, yp : Number = 0, wv : Number = 10, hv : Number = 10, vFill : IFill = null, tl : Number = 0, tr : Number = 0, bl : Number = 0, br : Number = 0, vCenter : Boolean = false, vAutoRedraw : Boolean = true )		{			super( gfx, xp, yp, wv, hv, vFill, vCenter, vAutoRedraw );						_topLeft = tl;			_topRight = tr;			_bottomLeft = bl;			_bottomRight = br;			draw();		}/* Public Methods ..................................................................................*/				/**		 * @return	the string equivalent of this class.		 */				override public function toString() : String 		{			return "com.factorylabs.orange.core.display.graphics.FRectRoundComplex";		}		/* Protected Methods ...............................................................................*/		/**		 * Draws the complex rounded rectangle.		 * @see http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/display/Graphics.html#drawRoundRectComplex()		 */				override protected function drawGraphic() : void		{			_gfx.drawRoundRectComplex( _x, _y, _w, _h, _topLeft, _topRight, _bottomLeft, _bottomRight );		}	}}