package com.factorylabs.orange.core.net.loadermanager.loaders{	import flash.system.SecurityDomain;		import flash.display.Loader;	import flash.events.IEventDispatcher;	import flash.net.URLRequest;	import flash.system.ApplicationDomain;	import flash.system.LoaderContext;		/**	 * Wrapper for Sound objects which implements ILoader. 	 *  	 * <p>Copyright 2008 by Factory Design Labs, All Rights Reserved.</p> 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a> 	 *  	 * @author		grantdavis 	 * @version		1.0.0 :: Aug 14, 2008 	 */	public class DisplayLoader 		implements ILoader	{/* * PROPERTIES**************************************************************************************************** */		/**		 * 		 */		private static const DEFAULT_CONTEXT : LoaderContext = new LoaderContext( true, ApplicationDomain.currentDomain, SecurityDomain.currentDomain );		private var _loader : Loader;/* * PROPERTY ACCESS**************************************************************************************************** */		/**		 * @inheritDoc		 */		public function get dispatcher():IEventDispatcher		{			return _loader.contentLoaderInfo;		}		/**		 * @inheritDoc		 */		public function get bytesLoaded():int		{			return _loader.contentLoaderInfo.bytesLoaded;		}		/**		 * @inheritDoc		 */		public function get bytesTotal():int		{			return _loader.contentLoaderInfo.bytesTotal;		}		/**		 * @inheritDoc		 */		public function get data() : *		{			return _loader.content;		}		/* * CONSTRUCTOR**************************************************************************************************** */				/**		 * 		 */		public function DisplayLoader()		{			_loader = new Loader();		}				/**		 * 		 */		public function toString() : String 		{			return "com.factorylabs.orange.core.net.loadmanager.loaders.SoundLoader";		}/* * PUBLIC ACCESS**************************************************************************************************** */				/**		 * @inheritDoc		 */		public function open( request:URLRequest, context:*=null ):void		{			if ( context == null ) context = DEFAULT_CONTEXT;			_loader.load( request, context as LoaderContext );		};				/**		 * @inheritDoc		 */		public function close():void		{			try{ _loader.close(); } 			catch( e:* ){};		};/* * INTERNAL ACCESS**************************************************************************************************** *//* * EVENT HANDLING**************************************************************************************************** */	}}