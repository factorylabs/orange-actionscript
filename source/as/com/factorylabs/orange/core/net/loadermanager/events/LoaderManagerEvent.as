package com.factorylabs.orange.core.net.loadermanager.events{
	import flash.events.Event;		import com.factorylabs.orange.core.net.loadermanager.LoadItem;	
	/**	 * Summary 	 *  	 * Copyright 2008 by Factory Design Labs, All Rights Reserved. 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a> 	 * 	 * @author		grant 	 * @version		1.0.0 :: Feb 8, 2008 	 */	public class LoaderManagerEvent		extends Event	{/* Properties ......................................................................................*/		/**		 * Event types for LoaderManagerEvents. 		 */		public static const LOAD_FAILED:String = "LoaderManagerEvent.onLoadFailure";		public static const LOAD_PROGRESS:String = "LoaderManagerEvent.onLoadProgress";		public static const LOAD_PAUSED:String = "LoaderManagerEvent.onLoadPaused";		public static const LOAD_STARTED:String = "LoaderManagerEvent.onLoadStart";		public static const LOAD_CANCELLED:String = "LoaderManagerEvent.onLoadCancel";		public static const LOAD_COMPLETE:String = "LoaderManagerEvent.onLoadComplete";		public static const ALL_LOADS_COMPLETE:String = "LoaderManagerEvent.onAllLoadsComplete";		public static const ADDED_ITEM:String = "LoaderManagerEvent.onItemAdded";				/**		 * Number of loaded items in the LoaderManager.		 */		public var itemsLoaded:int;				/**		 * Total number of all load items in the LoaderManager.		 */		public var itemsTotal:int;				/**		 * Number of bytes loaded in the LoaderManager.		 */		public var bytesLoaded:int;				/**		 * Number of bytes total in the LoaderManager.		 */		public var bytesTotal:int;				/**		 * LoadItem associated with this event. 		 */		public var loadItem:LoadItem;		/* Constructor ......................................................................................*/			public function LoaderManagerEvent( type:String, 												info:LoadItem, 												v_itemsLoaded:int, 												v_itemsTotal:int, 												loadedBytes:int, 												totalBytes:int, 												bubbles:Boolean=false, 												cancelable:Boolean=false )		{			super( type, bubbles, cancelable );			this.loadItem = info;			this.itemsLoaded = v_itemsLoaded;			this.itemsTotal = v_itemsTotal;			this.bytesLoaded = loadedBytes;			this.bytesTotal = totalBytes;		}		/* Clone Method ......................................................................................*/		override public function clone():Event 		{			return new LoaderManagerEvent( this.type, 											this.loadItem, 											this.itemsLoaded, 											this.itemsTotal, 											this.bytesLoaded, 											this.bytesTotal, 											this.bubbles, 											this.cancelable );		}	}}