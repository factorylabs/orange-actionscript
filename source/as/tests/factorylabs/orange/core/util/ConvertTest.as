package tests.factorylabs.orange.core.util{	import asunit.framework.TestCase;	import com.factorylabs.orange.core.util.Convert;		/**	 * Test methods for the Convert utility test case. 	 *  	 * <p>Copyright 2004-2009 by Factory Design Labs</p>     *      * Permission is hereby granted, free of charge, to any person obtaining     * a copy of this software and associated documentation files (the     * "Software"), to deal in the Software without restriction, including     * without limitation the rights to use, copy, modify, merge, publish,     * distribute, sublicense, and/or sell copies of the Software, and to     * permit persons to whom the Software is furnished to do so, subject to     * the following conditions:     *      * The above copyright notice and this permission notice shall be     * included in all copies or substantial portions of the Software.     *      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a> 	 *  	 * @author		Matthew Kitt 	 * @version		1.0.0 :: Mar 15, 2009 	 */	public class ConvertTest		extends TestCase 	{		public function ConvertTest()		{			super();		}				override public function toString() :String 		{			return 'tests.factorylabs.orange.core.utils.ConvertTest';		}				public function test_toBool() :void		{			assertTrue( Convert.toBool( 'true' ) );			assertTrue( Convert.toBool( 1 ) );			assertFalse( Convert.toBool( 'false' ) );			assertFalse( Convert.toBool( 0 ) );		}				public function test_convertTime() :void		{			assertEquals( '00:05', Convert.convertTime( 5000 ) );			assertEquals( '01:05', Convert.convertTime( 65000 ) );			assertEquals( '', Convert.convertTime( NaN ) );		}	}}