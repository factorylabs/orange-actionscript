package tests.factorylabs.orange.core.util{	import asunit.framework.TestCase;	import com.factorylabs.orange.core.util.ValidateUtil;		/** 	 * Test methods for the ValidateUtil test case. 	 *  	 * <p>Copyright 2004-2009 by Factory Design Labs</p>     *      * Permission is hereby granted, free of charge, to any person obtaining     * a copy of this software and associated documentation files (the     * "Software"), to deal in the Software without restriction, including     * without limitation the rights to use, copy, modify, merge, publish,     * distribute, sublicense, and/or sell copies of the Software, and to     * permit persons to whom the Software is furnished to do so, subject to     * the following conditions:     *      * The above copyright notice and this permission notice shall be     * included in all copies or substantial portions of the Software.     *      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a> 	 *  	 * @author		Matthew Kitt 	 * @version		1.0.0 :: Mar 16, 2009 	 */	public class ValidateUtilTest		extends TestCase	{			public function ValidateUtilTest()		{			super();		}				override public function toString() :String 		{			return 'tests.factorylabs.orange.core.util.ValidateUtilTest';		}				public function test_isValidEmail() :void		{			assertTrue( ValidateUtil.isValidEmail( 'mk.kitt@aol.com' ) );			assertTrue( ValidateUtil.isValidEmail( 'matthew.kitt@aol.com' ) );			assertTrue( ValidateUtil.isValidEmail( 'matthewkitt@aol.com' ) );						assertFalse( ValidateUtil.isValidEmail( 'factorylabs.com' ) );			assertFalse( ValidateUtil.isValidEmail( 'm@.com' ) );		}				public function test_isValidUSZip() :void		{			assertTrue( ValidateUtil.isValidUSZip( '12345' ) );			assertTrue( ValidateUtil.isValidUSZip( '12345-1234' ) );						assertFalse( ValidateUtil.isValidUSZip( '1234' ) );			assertFalse( ValidateUtil.isValidUSZip( '12345-12345' ) );		}				public function test_isValidCANPostal() :void		{			assertTrue( ValidateUtil.isValidCanPostal( 'A1B2C3' ) );			assertTrue( ValidateUtil.isValidCanPostal( 'A1B 2C3' ) );						assertFalse( ValidateUtil.isValidCanPostal( '12345' ) );			assertFalse( ValidateUtil.isValidCanPostal( '12345-1234' ) );		}		//		* TODO: Needs to support an area code?//		* TODO: should support 303.666.6666 or (303) 666.6666 - (remove all numeric numbers and test if 10 characters)		public function test_isValidPhoneNumber() :void		{//			assertTrue( ValidateUtil.isValidPhoneNumber( '666.6666' ) );			assertTrue( ValidateUtil.isValidPhoneNumber( '666-6666' ) );			assertTrue( ValidateUtil.isValidPhoneNumber( '6666666' ) );			assertTrue( ValidateUtil.isValidPhoneNumber( '666 6666' ) );		}				public function test_isValidAreaCode() :void		{			assertTrue( ValidateUtil.isValidAreaCode( '123' ) );			assertFalse( ValidateUtil.isValidAreaCode( '' ) );		}	}}