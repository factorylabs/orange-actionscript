package tests.factorylabs.orange.core.gc{	import asunit.framework.TestCase;	import com.factorylabs.orange.core.gc.JanitorConnections;	import flash.display.Sprite;	/** 	 * Test methods for the JanitorConnections test case. 	 *  	 * <p>Copyright 2004-2009 by Factory Design Labs</p>     *      * Permission is hereby granted, free of charge, to any person obtaining     * a copy of this software and associated documentation files (the     * "Software"), to deal in the Software without restriction, including     * without limitation the rights to use, copy, modify, merge, publish,     * distribute, sublicense, and/or sell copies of the Software, and to     * permit persons to whom the Software is furnished to do so, subject to     * the following conditions:     *      * The above copyright notice and this permission notice shall be     * included in all copies or substantial portions of the Software.     *      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a> 	 *  	 * @author		Matthew Kitt 	 * @version		1.0.0 :: May 28, 2009 	 */	public class JanitorConnectionsTest		extends TestCase	{		private var _janitor		:JanitorConnections;		private var _sprite1		:Sprite;		private var _sprite2		:Sprite;			public function JanitorConnectionsTest()		{			super();		}				override public function toString() :String 		{			return "tests.factorylabs.orange.core.gc.JanitorConnectionsTest";		}				override protected function setUp() :void		{			_janitor = new JanitorConnections( this );			_sprite1 = new Sprite();			_sprite2 = new Sprite();		}				override protected function tearDown() :void		{			_janitor.cleanUp();			_janitor = null;		}				public function test_addConnection() :void		{			_janitor.addConnection( _sprite1 );			assertNotNull( _janitor.connections );			_janitor.removeConnection( _sprite1 );		}				public function test_removeConnection() :void		{			_janitor.addConnection( _sprite1 );			_janitor.removeConnection( _sprite1 );			assertNull( _janitor.connections[ _sprite1 ] );		}				public function test_cleanUpConnections() :void		{			_janitor.addConnection( _sprite1 );			_janitor.addConnection( _sprite2 );			_janitor.cleanUpConnections();			assertNull( _janitor.connections[ _sprite1 ] );			assertNull( _janitor.connections[ _sprite2 ] );		}	}}