package tests.factorylabs.orange.helpers {	import flash.display.Sprite;			/**	 * Basic necessities to mock a class.	 *  	 * <p>Copyright 2004-2009 by Factory Design Labs</p>     *      * Permission is hereby granted, free of charge, to any person obtaining     * a copy of this software and associated documentation files (the     * "Software"), to deal in the Software without restriction, including     * without limitation the rights to use, copy, modify, merge, publish,     * distribute, sublicense, and/or sell copies of the Software, and to     * permit persons to whom the Software is furnished to do so, subject to     * the following conditions:     *      * The above copyright notice and this permission notice shall be     * included in all copies or substantial portions of the Software.     *      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,     * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF     * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND     * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE     * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION     * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION     * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a>	 *	 * @author		Matthew Kitt	 * @version		1.0.0 :: May 26, 2009	 */		public class MockBaseClass	{		private var _var      :int;		private var _isTrue   :Boolean = true;		public var baseVar    :Sprite;				public function set testVar( $testVar :int ) :void		{			_var = $testVar;		}				public function get isTrue() :Boolean { return _isTrue; }		public function set isTrue( v_isTrue :Boolean ) :void		{			_isTrue = v_isTrue;		}				public function MockBaseClass()		{			shouldNotShow();		}				public function toString() :String 		{			return 'tests.factorylabs.orange.helpers.MockBaseClass';		}				private function shouldNotShow():void		{				}				protected function shouldBeProtected() :void		{			shouldNotShow();		}				public function method1() :Boolean		{			return true;		}				public static function staticMethod( $param :String ) :Sprite		{			return new Sprite();		}	}}