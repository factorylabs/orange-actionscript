package tests.factorylabs.fluint.ui {	import tests.factorylabs.fluint.events.TestResultEvent;	import tests.factorylabs.fluint.ui.ITestDisplay;		import com.factorylabs.orange.core.display.graphics.fills.SolidFill;	import com.factorylabs.orange.core.display.stage.StageBackground;		import flash.display.DisplayObjectContainer;		/**	 * Floods the background based on the results of a suite of tests (yellow = running, red = fail, green = nice work).   	 * 	 * <p>Copyright 2009 by Factory Design Labs, All Rights Reserved.</p>	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a>	 *	 * @author		Matthew Kitt	 * @version		1.0.0 :: Mar 28, 2009	 */	public class TestStageBackgroundDisplay		implements ITestDisplay 	{		private static const YELLOW		:SolidFill = new SolidFill( 0xFBDE2D );		private static const GREEN		:SolidFill = new SolidFill( 0x92D050 );		private static const RED		:SolidFill = new SolidFill( 0xCC0000 );				private var _background 		:StageBackground;				/**		 * @param holder	Storage container for the <code>StageBackground</code> object.		 */		public function TestStageBackgroundDisplay( holder :DisplayObjectContainer ) 		{			_background = new StageBackground( holder, holder.stage.stageWidth, holder.stage.stageHeight, YELLOW );		}				public function toString() :String 		{			return "tests.factorylabs.fluint.ui.TestStageBackgroundDisplay";		}				/**		 * @inheritDoc		 */		public function dispose() :void		{			_background.dispose();		}				/**		 * @inheritDoc		 */		public function updateTestSuiteResult( e :TestResultEvent ) :void		{					}				/**		 * @inheritDoc		 */		public function updateTestCaseResult( e :TestResultEvent ) :void		{					}				/**		 * @inheritDoc		 */		public function updateTestMethodResult( e :TestResultEvent ) :void		{					}				/**		 * @inheritDoc		 */		public function updateTestsComplete( xml :XML ) :void		{			var status :Boolean = ( xml.@status == 'true' ) ? true : false;			if( status )				_background.fill = GREEN;			else				_background.fill = RED;			_background.redraw();		}	}}