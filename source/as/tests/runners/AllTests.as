package tests.runners{	import tests.factorylabs.orange.core.gc.JanitorSoundChannelTest;		import tests.digitalprimates.fluint.tests.TestSuite;	import tests.factorylabs.orange.core.collections.MapTest;	import tests.factorylabs.orange.core.gc.JanitorConnectionsTest;	import tests.factorylabs.orange.core.gc.JanitorIntervalTest;	import tests.factorylabs.orange.core.gc.JanitorManagerTest;	import tests.factorylabs.orange.core.gc.JanitorTest;	import tests.factorylabs.orange.core.logger.LogTest;	import tests.factorylabs.orange.core.math.MathUtilTest;	import tests.factorylabs.orange.core.math.PhysicsUtilTest;	import tests.factorylabs.orange.core.util.ArrayUtilTest;	import tests.factorylabs.orange.core.util.ColorUtilTest;	import tests.factorylabs.orange.core.util.ConvertTest;	import tests.factorylabs.orange.core.util.LocaleTest;	import tests.factorylabs.orange.core.util.StringUtilTest;	import tests.factorylabs.orange.core.util.ValidateUtilTest;			/**	 * Creates the application test suite from test cases. 	 *  	 * <p>Copyright 2009 by Factory Design Labs, All Rights Reserved.</p> 	 * <a href="http://www.factorylabs.com/">www.factorylabs.com</a> 	 *  	 * @author		Matthew Kitt 	 * @version		1.0.0 :: Mar 23, 2009 	 */	final public class AllTests 	{		public function AllTests(){}				public static function toString() :String 		{			return "tests.runners.AllTests";		}			public static function getAllTests() :TestSuite		{			var ts	:TestSuite = new TestSuite();						// fluint.*//			ts.addTestCase( new TestAssert() );//			ts.addTestCase( new TestEmptyCase() );//			ts.addTestCase( new TestAsynchronous() );//			ts.addTestCase( new TestSynchronousSetUpTearDown() );//			ts.addTestCase( new TestAsynchronousSetUpTearDown() );						// factorylabs.core.collections			ts.addTestCase( new MapTest() );						// factorylabs.core.gc			ts.addTestCase( new JanitorTest() );			ts.addTestCase( new JanitorConnectionsTest() );			ts.addTestCase( new JanitorIntervalTest() );			ts.addTestCase( new JanitorManagerTest() );			ts.addTestCase( new JanitorSoundChannelTest() );						// factorylabs.core.logger			ts.addTestCase( new LogTest() );						// factorylabs.core.math			ts.addTestCase( new MathUtilTest() );			ts.addTestCase( new PhysicsUtilTest() );						// factorylabs.core.util			ts.addTestCase( new ArrayUtilTest() );			ts.addTestCase( new ColorUtilTest() );			ts.addTestCase( new ConvertTest() );			ts.addTestCase( new LocaleTest() );			ts.addTestCase( new StringUtilTest() );			ts.addTestCase( new ValidateUtilTest() );			return ts;		}	}}